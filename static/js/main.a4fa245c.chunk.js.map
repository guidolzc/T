{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["url","App","state","data","modalInsertar","form","id","timestamp","nombre","email","phone","razon_social","peticionGet","axios","get","then","response","console","log","setState","catch","error","message","peticionPost","a","post","handleChange","e","persist","target","name","value","this","className","onClick","map","empresa","icon","faEdit","faTrashAlt","Modal","isOpen","ModalHeader","style","display","float","ModalBody","htmlFor","type","readOnly","onChange","ModalFooter","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4fa245c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from \"reactstrap\";\n\nconst url = \"https://testing-pay-license.usound.co/payments/api/api/clients/\";\n\nclass App extends Component {\n  state = {\n    data: [],\n    modalInsertar: false,\n    form: {\n      id: \"\",\n      timestamp: \"\",\n      nombre: \"\",\n      email: \"\",\n      phone: \"\",\n      razon_social: \"\",\n    },\n  };\n  peticionGet = () => {\n    axios\n      .get(url)\n      .then((response) => {\n        console.log(response.data);\n        this.setState({ data: response.data });\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n  peticionPost = async () => {\n    delete this.state.form.id;\n    await axios\n      .post(url, this.state.form)\n      .then((response) => {\n        this.modalInsertar();\n        this.peticionGet();\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n  };\n\n  modalInsertar = () => {\n    this.setState({ modalInsertar: !this.state.modalInsertar });\n  };\n\n  handleChange = async (e) => {\n    e.persist();\n    await this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n    console.log(this.state.form);\n  };\n\n  componentDidMount() {\n    this.peticionGet();\n  }\n\n  render() {\n    const { form } = this.state;\n\n    return (\n      <div className=\"App\">\n        <br />\n        <button className=\"btn\" onClick={() => this.modalInsertar()}>\n          Agregar\n        </button>\n        <br />\n        <br />\n        <table className=\"table \">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Fecha</th>\n              <th>Nombre</th>\n              <th>correo</th>\n              <th>Phone</th>\n              <th>Solucion</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.data.map((empresa) => {\n              return (\n                <tr key={empresa.id}>\n                  <td>{empresa.id}</td>\n                  <td>{empresa.timestamp}</td>\n                  <td>{empresa.nombre}</td>\n                  <td>{empresa.email}</td>\n                  <td>{empresa.phone}</td>\n                  <td>{empresa.razon_social}</td>\n                  <td>\n                    <button className=\"btn btn-primary\">\n                      <FontAwesomeIcon icon={faEdit} />\n                    </button>\n                    {\"\"}\n                    <button className=\"btn btn-danger\">\n                      <FontAwesomeIcon icon={faTrashAlt} />\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n\n        <Modal isOpen={this.state.modalInsertar}>\n          <ModalHeader style={{ display: \"block\" }}>\n            <span\n              style={{ float: \"right\" }}\n              onClick={() => this.modalInsertar()}\n            >\n              x\n            </span>\n          </ModalHeader>\n          <ModalBody>\n            <div className=\"form-group\">\n              <label htmlFor=\"id\">#</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"id\"\n                id=\"id\"\n                readOnly\n                onChange={this.handleChange}\n                value={form.id}\n              />\n              <br />\n              <label htmlFor=\"timestamp\">Fecha</label>\n              <input\n                className=\"form-control\"\n                type=\"data\"\n                name=\"timestamp\"\n                id=\"timestamp\"\n                onChange={this.handleChange}\n                value={form.timestamp}\n              />\n              <br />\n              <label htmlFor=\"nombre\">Nombre</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"nombre\"\n                id=\"nombre\"\n                onChange={this.handleChange}\n                value={form.nombre}\n              />\n              <br />\n              <label htmlFor=\"email\">Correo</label>\n              <input\n                className=\"form-control\"\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                onChange={this.handleChange}\n                value={form.email}\n              />\n              <br />\n              <label htmlFor=\"phone\">Phone</label>\n              <input\n                className=\"form-control\"\n                type=\"Number\"\n                name=\"phone\"\n                id=\"phone\"\n                onChange={this.handleChange}\n                value={form.phone}\n              />\n              <br />\n              <label htmlFor=\"razon_social\">Solucion</label>\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                name=\"razon_social\"\n                id=\"razon_social\"\n                onChange={this.handleChange}\n                value={form.razon_social}\n              />\n              <br />\n            </div>\n          </ModalBody>\n\n          <ModalFooter>\n            <button\n              className=\"btn btn-success\"\n              onClick={() => this.peticionPost()}\n            >\n              Insertar\n            </button>\n            :\n            <button\n              className=\"btn btn-danger\"\n              onClick={() => this.modalInsertar()}\n            >\n              Cancelar\n            </button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}